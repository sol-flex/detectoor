import * as beet from '@metaplex-foundation/beet';
import { Payload } from './Payload';
export type ValidateArgsRecord = {
    V1: {
        operation: string;
        payload: Payload;
        updateRuleState: boolean;
        ruleSetRevision: beet.COption<beet.bignum>;
    };
};
export type ValidateArgs = beet.DataEnumKeyAsKind<ValidateArgsRecord>;
export declare const isValidateArgsV1: (x: ValidateArgs) => x is {
    __kind: "V1";
} & Omit<{
    operation: string;
    payload: Payload;
    updateRuleState: boolean;
    ruleSetRevision: beet.COption<beet.bignum>;
}, "void"> & {
    __kind: 'V1';
};
export declare const validateArgsBeet: beet.FixableBeet<{
    __kind: "V1";
} & Omit<{
    operation: string;
    payload: Payload;
    updateRuleState: boolean;
    ruleSetRevision: beet.COption<beet.bignum>;
}, "void">, {
    __kind: "V1";
} & Omit<{
    operation: string;
    payload: Payload;
    updateRuleState: boolean;
    ruleSetRevision: beet.COption<beet.bignum>;
}, "void">>;
