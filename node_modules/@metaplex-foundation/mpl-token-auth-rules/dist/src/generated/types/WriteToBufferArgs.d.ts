import * as beet from '@metaplex-foundation/beet';
export type WriteToBufferArgsRecord = {
    V1: {
        serializedRuleSet: Uint8Array;
        overwrite: boolean;
    };
};
export type WriteToBufferArgs = beet.DataEnumKeyAsKind<WriteToBufferArgsRecord>;
export declare const isWriteToBufferArgsV1: (x: WriteToBufferArgs) => x is {
    __kind: "V1";
} & Omit<{
    serializedRuleSet: Uint8Array;
    overwrite: boolean;
}, "void"> & {
    __kind: 'V1';
};
export declare const writeToBufferArgsBeet: beet.FixableBeet<{
    __kind: "V1";
} & Omit<{
    serializedRuleSet: Uint8Array;
    overwrite: boolean;
}, "void">, {
    __kind: "V1";
} & Omit<{
    serializedRuleSet: Uint8Array;
    overwrite: boolean;
}, "void">>;
