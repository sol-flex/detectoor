"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLatestRuleSet = exports.getRevisionMapV1 = exports.getHeader = exports.PREFIX = void 0;
const generated_1 = require("./generated");
const msgpack_1 = require("@msgpack/msgpack");
__exportStar(require("./errors"), exports);
__exportStar(require("./generated"), exports);
exports.PREFIX = 'rule_set';
__exportStar(require("./pda"), exports);
const getHeader = (data) => {
    const [header, _] = generated_1.ruleSetHeaderBeet.deserialize(data.slice(0, 9));
    return header;
};
exports.getHeader = getHeader;
const getRevisionMapV1 = (data) => {
    const header = (0, exports.getHeader)(data);
    const [revmap, _] = generated_1.ruleSetRevisionMapV1Beet.deserialize(data.slice(parseInt(header.revMapVersionLocation) + 1, data.length));
    return revmap;
};
exports.getRevisionMapV1 = getRevisionMapV1;
const getLatestRuleSet = (data) => {
    const header = (0, exports.getHeader)(data);
    const revmap = (0, exports.getRevisionMapV1)(data);
    const latestRevision = parseInt(revmap.ruleSetRevisions[revmap.ruleSetRevisions.length - 1]);
    const rulesetDecoded = (0, msgpack_1.decode)(data.slice(latestRevision + 1, parseInt(header.revMapVersionLocation)));
    return JSON.stringify(rulesetDecoded, null, 2);
};
exports.getLatestRuleSet = getLatestRuleSet;
//# sourceMappingURL=mpl-token-auth-rules.js.map